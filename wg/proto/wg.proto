syntax="proto3";

// todo: GenInterface

service Wireguard {

    rpc InitializeI(IReq) returns (IResp) {}

    rpc AddPeer(AddPReq) returns (AddPResp) {}
    rpc DelPeer(DelPReq) returns (DelPResp) {}
    rpc ListPeers(ListPeersReq) returns (ListPeersResp) {}
    rpc ManageNIC(ManageNICReq) returns (ManageNICResp) {}

    rpc GetNICInfo(NICInfoReq) returns (NICInfoResp) {}
    rpc GenPublicKey(PubKeyReq) returns (PubKeyResp) {}
    rpc GenPrivateKey(PrivKeyReq) returns (PrivKeyResp) {}

}

message AddPReq {
    string nic = 1;
    string allowedIPs = 2;
    string publicKey = 3;
}


message AddPResp {
    string message = 1;
}

message ListPeersReq {
    string nicname = 1;
    string error  = 2;
}

message ListPeersResp {
    repeated interface i  =1;
    repeated peer p = 2;

    message interface {
        string nicname = 1;
        string publicKey  = 2;
        uint32 listeningPort = 3;
    }
    message peer {
        string endpoint = 1;
        string allowedIPs =2;
        string latestHandshake=3;
        string transfer = 4;
    }
}

message IReq {
    string address = 1;
    uint32 listenPort = 2;
    bool saveConfig = 3;
    string privateKey = 4;
    string eth = 5;
    string iName = 6;
}
message IResp {
    // message could be error or ordinary result depend on function result.
    string message = 1 ;
}


message DelPReq {
    string peerPublicKey = 1;
    string ipAddress  = 2;
}

message DelPResp {
    string message = 1;
}

message ManageNICReq {
//    manage NIC is responsible to up and down given interface
    string nic = 1;
    string cmd = 2; // up or down
}

message ManageNICResp {
    string message = 1;
}

message NICInfoReq {
    string interface = 1;
}

message NICInfoResp {
    string message = 1;
}

message PubKeyReq {
    string nicPub = 1;  // name of wireguard interface
}

message PubKeyResp {
    string publicKey = 1;
}

message PrivKeyReq {
    string privateKeyName = 1;
}

message PrivKeyResp {
    string message  = 1;
}

